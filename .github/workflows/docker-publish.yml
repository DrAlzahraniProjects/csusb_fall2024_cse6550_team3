name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    # Update: Log in to Docker Hub instead of GitHub Container Registry
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}  # Docker Hub username stored in GitHub Secrets
        password: ${{ secrets.DOCKERHUB_TOKEN }}     # Docker Hub access token or password stored in GitHub Secrets
    
    # Keep the repo name in lowercase to match Docker Hub naming conventions
    - name: Lowercase the repo name
      run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

    - name: Create .env file
      run: echo "MISTRAL_API_KEY=${{ secrets.MISTRAL_API_KEY }}" > .env

    - name: Install Mambaforge
      run: |
        wget -q "https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh" -O mambaforge.sh
        bash mambaforge.sh -b -p $HOME/mambaforge
        echo "$HOME/mambaforge/bin" >> $GITHUB_PATH

    - name: Create Mamba environment
      run: |
        source $HOME/mambaforge/bin/activate
        mamba init bash
        mamba create -n team3_env python=3.11 -y
        mamba install --yes --file requirements.txt
      shell: bash

    # Update: Build and push the Docker image to Docker Hub
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64 
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/team3-app:latest  
          ${{ secrets.DOCKERHUB_USERNAME }}/team3-app:${{ github.sha }}  
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
