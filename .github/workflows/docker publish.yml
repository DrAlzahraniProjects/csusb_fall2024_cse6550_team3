name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest  
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Lowercase the repo name
      run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Install Mambaforge
      run: |
        wget -q "https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh" -O mambaforge.sh
        bash mambaforge.sh -b -p $HOME/mambaforge
        echo "$HOME/mambaforge/bin" >> $GITHUB_PATH

    - name: Create Mamba environment
      run: |
        source $HOME/mambaforge/bin/activate
        mamba init bash
        mamba create -n team3_env python=3.12 langchain streamlit jupyter ipykernel sentence-transformers -c conda-forge -y
        mamba activate team3_env
        pip install faiss-cpu langchain-community langchain-core langchain-text-splitters rank_bm25
      shell: bash

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      id: build-and-push-docker-image
      with:
        context: .
        push: true
        platforms: linux/amd64,linux/arm64
        tags: |
          ghcr.io/${{ env.REPO }}/team3-app:latest
          ghcr.io/${{ env.REPO }}/team3-app:${{ github.sha }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ghcr.io/${{ env.REPO }}/team3-app:${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Image digest
      run: echo ${{ steps.build-and-push-docker-image.outputs.digest }}
